package ${entity.javaPackage};
import javax.persistence.*;
import java.util.*;

import com.mossle.core.hibernate.PropertyFilter;
import com.mossle.core.page.Page;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
/**
*   This code is generated by FreeMarker
*   generate db table to entity
*   author:handong
*/
@Controller
@RequestMapping("${entity.controllerAlias}")
public class ${entity.className}<#if entity.superclass?has_content> extends ${entity.superclass}</#if>{
    <#list entity.hibernateManagerList as property>
    @Autowired
    private ${property} ${property?cap_first};

    </#list>

    @RequestMapping("${entity.baseRequestMapUrl}-list")
    public String list(
        <#list entity.properties as property>
        public ${property.propertyType} get${property.propertyName?cap_first}() {
        return ${property.propertyName};
        }
        </#list>
    ){
        List<PropertyFilter> filters = new ArrayList<>();

        if(null == msgStatusEnum){
            model.addAttribute("error","无效的消息类型:"+status);
        } else if(MsgStatusEnum.ALL != msgStatusEnum) {
            filters.add(new PropertyFilter("EQI_status",status+""));
        }
        if(StringUtils.isNotBlank(processInstanceId)){
            filters.add(new PropertyFilter("EQS_processInstanceId",processInstanceId));
        }

        page = processNodeMsgManager.pagedQuery(page, filters);
        model.addAttribute("page",page);
        model.addAttribute("processInstanceId",processInstanceId);
        model.addAttribute("status",status);
        return "${entity.baseRequestMapUrl}-list";
    }

    @RequestMapping("${entity.baseRequestMapUrl}-update")
    public String update(${entity.updateParams}){

    }

    @RequestMapping("${entity.baseRequestMapUrl}-del")
    public String del(${entity.delParams}){

    }

    @RequestMapping("${entity.baseRequestMapUrl}-show")
    public String show(${entity.showParams}){

    }
    <#--public ${entity.className}(<#list entity.properties as property>${property.javaType} ${property.propertyName}<#if property_has_next>,   ) {-->
        <#--<#list entity.properties as property>-->
            <#--this.${property.propertyName} = ${property.propertyName};-->
        <#--</#list>-->

    <#--}-->
    <#list entity.properties as property>
    public ${property.propertyType} get${property.propertyName?cap_first}() {
        return ${property.propertyName};
    }

    public void set${property.propertyName?cap_first}(${property.propertyType} ${property.propertyName}) {
        this.${property.propertyName} = ${property.propertyName};
    }

    </#list>

    @Override
    public String toString() {
    return "${entity.className}{"
            <#list entity.properties as property>
                <#if property_index == 0>
                + "${property.propertyName}=" + ${property.propertyName}
                <#else >
                + ",${property.propertyName}=" + ${property.propertyName}
                </#if>
            </#list>
            + '}';
    }
}
