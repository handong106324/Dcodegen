package ${entity.javaPackage};
import javax.persistence.*;
import java.util.*;

import com.mossle.core.hibernate.PropertyFilter;
import com.mossle.core.page.Page;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

<#list entity.managerImports as property>
import ${property};

</#list>
/**
*   This code is generated by FreeMarker
*   generate db table to entity
*   author:handong
*/
@Controller
@RequestMapping("${entity.controllerAlias}")
public class ${entity.className}<#if entity.superclass?has_content> extends ${entity.superclass}</#if>{
    <#list entity.hibernateManagerList as property>
    @Autowired
    private  ${property?cap_first} ${property};

    </#list>

    @RequestMapping("${entity.baseRequestMapUrl}-list")
    public String list(<#list entity.listParams as property>${property.type} (name="${property.alias}",defaultValue="${property.defaultValue}")${property.valueType} ${property.alias},
        <#--<#if property_has_next>,</#if>-->
        </#list>
        Model model,
        @ModelAttribute Page page){
        List<PropertyFilter> filters = new ArrayList<>();

<#list entity.listParams as property>
    <#if property_has_next>
        <#if property.valueType =='String'>
            if(StringUtils.isNotBlank(${property.alias}){
                filters.add(new PropertyFilter("EQS_${property.alias}",${property.alias}));
            }
        </#if>
        <#if property.valueType =='int'>
        if(StringUtils.isNotBlank(${property.alias}){
        filters.add(new PropertyFilter("IQS_${property.alias}",${property.alias}));
        }
    </#if>
        <#if property.valueType =='long'>
            if(StringUtils.isNotBlank(${property.alias}){
            filters.add(new PropertyFilter("EQL_${property.alias}",${property.alias}));
            }
        </#if>

    </#if>
        model.addAttribute("${property.alias}",${property.alias});
</#list>

        page = ${entity.baseHibernateManager}.pagedQuery(page, filters);
        model.addAttribute("page",page);
        return "${entity.baseRequestMapUrl}-list";
    }

    <#--@RequestMapping("${entity.baseRequestMapUrl}-update")-->
    <#--public String update(${entity.updateParams}){-->

    <#--}-->

    <#--@RequestMapping("${entity.baseRequestMapUrl}-del")-->
    <#--public String del(${entity.delParams}){-->

    <#--}-->

    <#--@RequestMapping("${entity.baseRequestMapUrl}-show")-->
    <#--public String show(${entity.showParams}){-->

    <#--}-->
    <#--public ${entity.className}(<#list entity.properties as property>${property.javaType} ${property.propertyName}<#if property_has_next>,   ) {-->
        <#--<#list entity.properties as property>-->
            <#--this.${property.propertyName} = ${property.propertyName};-->
        <#--</#list>-->

    <#--}-->

}
